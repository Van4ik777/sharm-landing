import React, { useState, useEffect } from "react";
import "./StructurePage.css";

const icons = {
  president: "üëë",
  vicepresident: "ü§ù",
  premier: "üìú",
  minister: "üé©",
  bank: "üè¶",
  patriot: "‚öîÔ∏è",      
  culture: "üé≠",      
  finance: "üí∞",      
  sport: "üå±",      
  info: "üì¢",         
  development: "üöÄ",  
};

interface Person {
  name: string;
  phone: string;
  email?: string;
}

interface StructureItem {
  id: string;
  title: string;
  icon: string;
  image?: string; // –∫–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  description: string;
  minister?: Person; // –¥–ª—è —Å–µ–∫—Ç–æ—Ä—ñ–≤
  contact?: Person; // –¥–ª—è –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞/–≤—ñ—Ü–µ/–ø—Ä–µ–º'—î—Ä–∞
}

const organs: StructureItem[] = [
  {
    id: "president",
    title: "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç",
    icon: icons.president,
    image: "prez.png",
    description:
      "–ö–µ—Ä—É—î –®–ê–†–ú–æ–º, –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î –∑–∞—Å—ñ–¥–∞–Ω–Ω—è, –∫–æ–æ—Ä–¥–∏–Ω—É—î –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å –æ—Ä–≥–∞–Ω—É. –û–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –ø–µ—Ä—ñ–æ–¥–∏ (—Å–µ–º–µ—Å—Ç—Ä–∏).",
    contact: {
        phone: "+380 67 101 11 22",
        email: "president@sharm.ua",
        name: "–î–µ–Ω—ñ—Å –ö–æ–≤–∞–ª–µ–Ω–∫–æ"
    },
  },
  {
    id: "vicepresident",
    title: "–í—ñ—Ü–µ–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç",
    icon: icons.vicepresident,
    image: "vprez.png",
    description:
      "–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞, –≤–∏–∫–æ–Ω—É—î –π–æ–≥–æ –æ–±–æ–≤'—è–∑–∫–∏ —É —Ä–∞–∑—ñ –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ. –û–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –ø–µ—Ä—ñ–æ–¥–∏.",
    contact: {
        phone: "+380 67 202 22 33",
        email: "vicepresident@sharm.ua",
        name: "–£–ª—è–Ω–∞ –ü–µ—Ç—Ä—ñ–≤–Ω–∞"
    },
  },
  {
    id: "premier",
    title: "–ü—Ä–µ–º'—î—Ä",
    icon: icons.premier,
    image: "prem.png",
    description:
      "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏ –∑–∞—Å—ñ–¥–∞–Ω—å, –∑–≤'—è–∑–æ–∫ –º—ñ–∂ —á–ª–µ–Ω–∞–º–∏ –®–ê–†–ú—É. –û–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –ø–µ—Ä—ñ–æ–¥–∏.",
    contact: {
        phone: "+380 67 303 33 44",
        email: "premier@sharm.ua",
        name: "–ö–∏—Ä–∏–ª–æ –Ü–≤–∞–Ω–æ–≤–∏—á"
    },
  },
  {
    id: "minister",
    title: "–ú—ñ–Ω—ñ—Å—Ç—Ä",
    icon: icons.minister,
    description: "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π –∑–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—é —Å–µ–∫—Ç–æ—Ä—ñ–≤ —Ç–∞ –∑–∞–≥–∞–ª—å–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è.",
  },
];

const sectors: StructureItem[] = [
  {
    id: "patriot",
    title: "–í—ñ–π—Å—å–∫–æ–≤–æ-–ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∏–π —Å–µ–∫—Ç–æ—Ä",
    icon: icons.patriot,
    image: "svs.png",
    description: "–û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î –∑–∞—Ö–æ–¥–∏ –≤—ñ–π—Å—å–∫–æ–≤–æ-–ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–æ–≥–æ —Å–ø—Ä—è–º—É–≤–∞–Ω–Ω—è.",
    minister: {
      name: "–û–ª–µ–≥ –ì–æ–Ω—á–∞—Ä",
      phone: "+380 67 222 33 44",
      email: "patriot@sharm.ua",
    },
  },
  {
    id: "culture",
    title: "–°–µ–∫—Ç–æ—Ä –∫—É–ª—å—Ç—É—Ä–∏",
    icon: icons.culture,
    image: "cult.png",
    description: "–†–µ–∞–ª—ñ–∑–æ–≤—É—î –∫—É–ª—å—Ç—É—Ä–Ω—ñ —Ç–∞ —Å—É—Å–ø—ñ–ª—å–Ω—ñ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏.",
    minister: {
      name: "–°–≤—ñ—Ç–ª–∞–Ω–∞ –ú–∏—Ä–æ–Ω–µ–Ω–∫–æ",
      phone: "+380 68 333 44 55",
      email: "culture@sharm.ua",
    },
  },
  {
    id: "sport",
    title: "–°–µ–∫—Ç–æ—Ä —Å–ø–æ—Ä—Ç—É —Ç–∞ –µ–∫–æ–ª–æ–≥—ñ—ó",
    icon: icons.sport,
    image: "sport.png",
    description: "–û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î —Å–ø–æ—Ä—Ç–∏–≤–Ω—ñ –ø–æ–¥—ñ—ó —Ç–∞ –µ–∫–æ–ø—Ä–æ—î–∫—Ç–∏.",
    minister: {
      name: "–ê–Ω–Ω–∞ –ö—Ä–∞–≤—á–µ–Ω–∫–æ",
      phone: "+380 67 555 66 77",
      email: "sport@sharm.ua",
    },
  },
  {
    id: "info",
    title: "–°–µ–∫—Ç–æ—Ä —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó",
    icon: icons.info,
    image: "inf.png",
    description: "–ó–∞–π–º–∞—î—Ç—å—Å—è —Å–æ—Ü–º–µ—Ä–µ–∂–∞–º–∏ —Ç–∞ –∑–æ–≤–Ω—ñ—à–Ω—å–æ—é –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—î—é.",
    minister: {
      name: "–î–º–∏—Ç—Ä–æ –°–∞–≤—á–µ–Ω–∫–æ",
      phone: "+380 68 666 77 88",
      email: "info@sharm.ua",
    },
  },
  {
    id: "development",
    title: "–°–µ–∫—Ç–æ—Ä —Ä–æ–∑–≤–∏—Ç–∫—É",
    icon: icons.development,
    image: "rozvt.png",
    description: "–í–¥–æ—Å–∫–æ–Ω–∞–ª—é—î –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î —ñ–Ω—à—ñ —Å–µ–∫—Ç–æ—Ä–∏.",
    minister: {
      name: "–û–∫—Å–∞–Ω–∞ –õ–µ–≤—á–µ–Ω–∫–æ",
      phone: "+380 50 777 88 99",
      email: "development@sharm.ua",
    },
  },
  {
    id: "bank",
    title: "–ù–ë–® ‚Äî –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –±–∞–Ω–∫ –®–ê–†–ú—É",
    icon: icons.bank,
    image: "zazicav.png",
    description: "–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∞ –æ—Å–æ–±–∞ –ø—Ä–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è.",
    minister: {
      name: "–í–∞–ª–µ–Ω—Ç–∏–Ω –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      phone: "+380 67 888 99 00",
      email: "bank@sharm.ua",
    },
  },
];


function Modal({
  visible,
  onClose,
  title,
  content,
  minister,
  contact,
  image,
  isMobile,
}: {
  visible: boolean;
  onClose: () => void;
  title?: string;
  content?: string;
  minister?: Person;
  contact?: Person;
  image?: string;
  isMobile: boolean;
}) {
  if (!visible) return null;

  return (
    <div style={styles.modalOverlay} onClick={onClose}>
      <div style={styles.modalContent} onClick={(e) => e.stopPropagation()}>
        <button style={styles.closeBtn} onClick={onClose}>
          √ó
        </button>
        {image && (
          <img
            src={`/img/svg/${image}`}
            alt={title}
            style={{
              width: "90%",
              marginLeft: "5%",
              maxHeight: 300, // –≤—ã—à–µ
              objectFit: "cover",
              objectPosition: isMobile ? "center" : (image === "inf.png" ? "center -100px" : "center"),
              borderRadius: 8,
              marginBottom: 20,
            }}
          />
        )}
        <h2 style={{ color: "#5D3FD3", marginBottom: 12, fontSize: 34 }}>{title}</h2>
        {content && <p style={{ fontSize: 15, color: "#444", lineHeight: 1.6 }}>{content}</p>}

        {(minister || contact) && (
          <div
            style={{
              marginTop: 20,
              padding: 14,
              backgroundColor: "#f4f0ff",
              borderRadius: 8,
              fontWeight: "600",
              color: "#5D3FD3",
              fontSize: 15,
              lineHeight: 1.8,
            }}
          >
            {minister && (
              <>
                <div>üë§ –ú—ñ–Ω—ñ—Å—Ç—Ä: {minister.name}</div>
                <div>üìû {minister.phone}</div>
                {minister.email && (
                  <div>
                    ‚úâÔ∏è{" "}
                    <a style={{ color: "#5D3FD3" }} href={`mailto:${minister.email}`}>
                      {minister.email}
                    </a>
                  </div>
                )}
              </>
            )}
            {contact && (
              <>
                <div>üë§ {contact.name}</div>
                <div>üìû {contact.phone}</div>
                {contact.email && (
                  <div>
                    ‚úâÔ∏è{" "}
                    <a style={{ color: "#5D3FD3" }} href={`mailto:${contact.email}`}>
                      {contact.email}
                    </a>
                  </div>
                )}
              </>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default function StructurePage() {
  const [modalData, setModalData] = useState<StructureItem | null>(null);
  const [isMobile, setIsMobile] = useState(false);

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    
    checkMobile();
    window.addEventListener('resize', checkMobile);
    
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  const openModal = (item: StructureItem) => setModalData(item);
  const closeModal = () => setModalData(null);

  return (
    <div style={styles.container}>
      <h1 style={{ color: "#5D3FD3", marginBottom: 20, marginTop: 150, textAlign: "center" }}>
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –®–ê–†–ú—É
      </h1>

      <section>
        <h3 style={{ color: "#7D5FFF", marginBottom: 10, fontSize: 32 }}>–û—Ä–≥–∞–Ω–∏ –®–ê–†–ú—É</h3>
        <div style={styles.treeContainer}>
          {organs.map((org) => (
            <div
              key={org.id}
              style={styles.treeNode}
              onClick={() => openModal(org)}
              title={`–ö–ª—ñ–∫ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: ${org.title}`}
              onMouseEnter={(e) => {
                    (e.currentTarget as HTMLDivElement).style.backgroundColor = "#f4f0ff";
                    (e.currentTarget as HTMLDivElement).style.transform = "translateX(6px)";
                    (e.currentTarget as HTMLDivElement).style.boxShadow =
                    "0 4px 12px rgba(93,63,211,0.25)";
            }}
            onMouseLeave={(e) => {
                (e.currentTarget as HTMLDivElement).style.backgroundColor = "transparent";
                (e.currentTarget as HTMLDivElement).style.transform = "translateX(0)";
                (e.currentTarget as HTMLDivElement).style.boxShadow = "none";
            }}
            >
              <span style={{ fontSize: 36, marginRight: 12 }}>{org.icon}</span>
              <span style={styles.nodeTitle}>{org.title}</span>
            </div>
          ))}
        </div>
      </section>

      <section style={{ marginTop: 40 }}>
        <h2 style={{ color: "#7D5FFF", marginBottom: 10, fontSize: 32 }}>–°–µ–∫—Ç–æ—Ä–∏ –®–ê–†–ú—É</h2>
        <div style={styles.treeContainer}>
          {sectors.map((sector) => (
            <div
              key={sector.id}
              style={styles.treeNode}
              onClick={() => openModal(sector)}
              title={`–ö–ª—ñ–∫ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: ${sector.title}`}
            onMouseEnter={(e) => {
            (e.currentTarget as HTMLDivElement).style.backgroundColor = "#f4f0ff";
            (e.currentTarget as HTMLDivElement).style.transform = "translateX(6px)";
            (e.currentTarget as HTMLDivElement).style.boxShadow =
            "0 4px 12px rgba(93,63,211,0.25)";
            }}
            onMouseLeave={(e) => {
                (e.currentTarget as HTMLDivElement).style.backgroundColor = "transparent";
                (e.currentTarget as HTMLDivElement).style.transform = "translateX(0)";
                (e.currentTarget as HTMLDivElement).style.boxShadow = "none";
            }}
            >
              <span style={{ fontSize: 36, marginRight: 12 }}>{sector.icon}</span>
              <div>
                <div style={styles.nodeTitle}>{sector.title}</div>
                {sector.minister && (
                  <div style={{ fontSize: 14, color: "#5D3FD3", marginTop: 4 }}>
                    –ú—ñ–Ω—ñ—Å—Ç—Ä: {sector.minister.name} <br />
                    –¢–µ–ª: {sector.minister.phone}
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>

      <Modal
        visible={!!modalData}
        onClose={closeModal}
        title={modalData?.title}
        content={modalData?.description}
        minister={modalData?.minister}
        contact={modalData?.contact}
        image={modalData?.image}
        isMobile={isMobile}
      />
    </div>
  );
}

const styles = {
  container: {
    maxWidth: 900,
    margin: "80px auto",
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
    padding: "0 24px",
  },
  treeContainer: {
    borderLeft: "4px solid #7D5FFF",
    paddingLeft: 20,
  },
  treeNode: {
    cursor: "pointer",
    display: "flex",
    alignItems: "center",
    marginBottom: 16,
    color: "#4b3ca7",
    fontWeight: "600",
    userSelect: "none" as const,
    padding: "10px 14px",
    borderRadius: 8,
    transition: "all 0.25s ease",
  },
  nodeTitle: {
    fontSize: 18,
  },
  modalOverlay: {
    position: "fixed" as const,
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(93, 63, 211, 0.45)",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 1000,
  },
  modalContent: {
    backgroundColor: "white",
    borderRadius: 10,
    padding: 36,
    maxWidth: 740,
    width: "90%",
    boxShadow: "0 6px 30px rgba(93, 63, 211, 0.35)",
    position: "relative" as const,
  },
  closeBtn: {
    position: "absolute" as const,
    top: 14,
    right: 14,
    border: "none",
    background: "none",
    fontSize: 30,
    cursor: "pointer",
    color: "#5D3FD3",
    lineHeight: 1,
  },
};
