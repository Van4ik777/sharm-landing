import React, { useState, useEffect } from "react";
import "./StructurePage.css";

const icons = {
  president: "üëë",
  vicepresident: "ü§ù",
  premier: "üìú",
  minister: "üé©",
  bank: "üè¶",
  patriot: "‚öîÔ∏è",
  culture: "üé≠",
  finance: "üí∞",
  sport: "üå±",
  info: "üì¢",
  development: "üöÄ",
  sponsorship: "ü§≤", // new icon for sponsorship
  externalinternal: "üåê", // new icon for external/internal development
};

interface Person {
  name?: string;
  email?: string;
}

interface StructureItem {
  id: string;
  title: string;
  icon: string;
  image?: string; // –∫–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  description: string;
  minister?: Person; // –¥–ª—è —Å–µ–∫—Ç–æ—Ä—ñ–≤
  contact?: Person; // –¥–ª—è –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞/–≤—ñ—Ü–µ/–ø—Ä–µ–º'—î—Ä–∞
}

const organs: StructureItem[] = [
  {
    id: "president",
    title: "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç",
    icon: icons.president,
    image: "prez.png",
    description:
      "–ö–µ—Ä—É—î –®–ê–†–ú–æ–º, –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î –∑–∞—Å—ñ–¥–∞–Ω–Ω—è, –∫–æ–æ—Ä–¥–∏–Ω—É—î –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å –æ—Ä–≥–∞–Ω—É. –û–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –ø–µ—Ä—ñ–æ–¥–∏ (—Å–µ–º–µ—Å—Ç—Ä–∏).",
  contact: {
    email: "sharm.lider.ua@gmail.com",
    name: "–¢–∞–Ω—á–∞–∫ –õ—é–±–æ–≤"
  },
  },
  {
    id: "vicepresident",
    title: "–í—ñ—Ü–µ–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç",
    icon: icons.vicepresident,
    image: "vprez.png",
    description:
      "–ó–∞—Å—Ç—É–ø–Ω–∏–∫ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞, —è–∫–∏–π –≤–∏–∫–æ–Ω—É—î –π–æ–≥–æ –æ–±–æ–≤'—è–∑–∫–∏ —É —Ä–∞–∑—ñ –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ, –ø—ñ–¥—Ç—Ä–∏–º—É—î —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—é —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤ —Ç–∞ –ø—Ä–æ—î–∫—Ç—ñ–≤, –∫–æ–º—É–Ω—ñ–∫—É—î –∑ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞–º–∏ —Å–µ–∫—Ç–æ—Ä—ñ–≤ –®–ê–†–ú—É —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è–º–∏ —à–∫—ñ–ª —Ç–∞ –≤–∏—Ä—ñ—à—É—î –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è.",
  contact: {
    email: "sharm.lider.ua@gmail.com",
    name: "–ß–µ—Ä–Ω—ñ–π –ê–Ω–Ω–∞"
  },
  },
  {
    id: "premier",
    title: "–ü—Ä–µ–º'—î—Ä",
    icon: icons.premier,
    image: "prem.png",
    description:
      "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏ –∑–∞—Å—ñ–¥–∞–Ω—å, –∑–≤'—è–∑–æ–∫ –º—ñ–∂ —á–ª–µ–Ω–∞–º–∏ –®–ê–†–ú—É. –û–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–∞ –¥–≤–∞ –ø–µ—Ä—ñ–æ–¥–∏.",
  contact: {
    email: "sharm.lider.ua@gmail.com",
    name: "–®–∞—Ç–∫–æ–≤—Å—å–∫–∞ –ú–∞—Ä—ñ—è"
  },
  }
];

const sectors: StructureItem[] = [
  {
    id: "culture",
    title: "–°–µ–∫—Ç–æ—Ä –ö—É–ª—å—Ç—É—Ä–∏",
    icon: icons.culture,
    image: "–∫—É–ª—å—Ç—É—Ä–∞.png",
    description: "–û—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î —Ç–≤–æ—Ä—á—ñ –∑–∞—Ö–æ–¥–∏, —Ä–æ–∑–≤–∏–≤–∞—î —Ç–∞–ª–∞–Ω—Ç–∏ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º—É—î –∫—É–ª—å—Ç—É—Ä–Ω—ñ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∏ –º–æ–ª–æ–¥—ñ.",
    minister: {
        name: "–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É",
      },
  },
  {
    id: "patriot",
    title: "–°–µ–∫—Ç–æ—Ä –í—ñ–π—Å—å–∫–æ–≤–æ-–ü–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–æ–≥–æ –°–ø—Ä—è–º—É–≤–∞–Ω–Ω—è",
    icon: icons.patriot,
    image: "svs.png",
    description: "–§–æ—Ä–º—É—î –ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∏–π –¥—É—Ö, –ø–æ–ø—É–ª—è—Ä–∏–∑—É—î –∑–Ω–∞–Ω–Ω—è –∑ –±–µ–∑–ø–µ–∫–∏ —Ç–∞ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—ó –æ–±–æ—Ä–æ–Ω–∏.",
    minister: {
        name: "–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É",
      },
  },
  {
    id: "development",
    title: "–°–µ–∫—Ç–æ—Ä –í–Ω—É—Ç—Ä—ñ—à—å–Ω–æ–≥–æ –†–æ–∑–≤–∏—Ç–∫—É",
    icon: icons.development,
    image: "–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π.png",
    description: "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∫–æ–º–∞–Ω–¥–Ω—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É, –º–æ—Ç–∏–≤–∞—Ü—ñ—é —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ä–æ–±–æ—Ç–∏ —á–ª–µ–Ω—ñ–≤ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó.",
    minister: {
        name: "–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É",
      },
  },
  {
    id: "info",
    title: "–°–µ–∫—Ç–æ—Ä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó",
    icon: icons.info,
    image: "—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è.png",
    description: "–ó–∞–π–º–∞—î—Ç—å—Å—è –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—î—é, –º–µ–¥—ñ–∞ —Ç–∞ —Å–æ—Ü–º–µ—Ä–µ–∂–∞–º–∏, —â–æ–± —É—Å—ñ –∑–Ω–∞–ª–∏ –ø—Ä–æ –ø–æ–¥—ñ—ó –π –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –®–ê–†–ú—É.",
    minister:{
        name: "–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É",
      },
  },
  {
    id: "finance",
    title: "–°–µ–∫—Ç–æ—Ä –ü—ñ–¥–ø—Ä–∏—î–º–Ω–∏—Ü—å–∫–æ—ó –î—ñ—è–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ –§—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—ñ",
    icon: icons.finance,
    image: "cult.png",
    description: "–ù–∞–≤—á–∞—î –º–æ–ª–æ–¥—å —Ä–æ–∑—É–º–Ω–æ –∫–µ—Ä—É–≤–∞—Ç–∏ –≥—Ä–æ—à–∏–º–∞, —Ä–æ–∑–≤–∏–≤–∞—î –ø—ñ–¥–ø—Ä–∏—î–º–Ω–∏—Ü—å–∫–µ –º–∏—Å–ª–µ–Ω–Ω—è.",
    minister: {
      name: '–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É',
    },
  },
  {
    id: "sponsorship",
    title: "–°–µ–∫—Ç–æ—Ä –°–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–∞",
    icon: icons.sponsorship,
    image: "laugh_sponsor.png",
    description: "–®—É–∫–∞—î –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤ —ñ —Ä–µ—Å—É—Ä—Å–∏ –¥–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø—Ä–æ—î–∫—Ç—ñ–≤ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó.",
    minister: {
      name: '–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É',
    },
  },
  {
    id: "externalinternal",
    title: "–°–µ–∫—Ç–æ—Ä –ó–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –†–æ–∑–≤–∏—Ç–∫—É",
    icon: icons.externalinternal,
    image: "–∑–æ–≤–Ω—ñ—à–Ω—ñ–π.png",
    description: "–ù–∞–ª–∞–≥–æ–¥–∂—É—î —Å–ø—ñ–≤–ø—Ä–∞—Ü—é –∑ —ñ–Ω—à–∏–º–∏ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è–º–∏ —Ç–∞ –ø–æ—à–∏—Ä—é—î –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å –®–ê–†–ú—É –∑–∞ –º–µ–∂—ñ —Ä–∞–π–æ–Ω—É.",
    minister: {
      name: '–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É',
    },
  },
  {
    id: "health-eco",
    title: "–°–µ–∫—Ç–æ—Ä –ó–¥–æ—Ä–æ–≤'—è —Ç–∞ –ï–∫–æ–ª–æ–≥—ñ—ó",
    icon: icons.sport,
    image: "–µ–∫–æ–ª–æ–≥—ñ—è.png",
    description: "–ü–æ–ø—É–ª—è—Ä–∏–∑—É—î –∑–¥–æ—Ä–æ–≤–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è —Ç–∞ –¥–±–∞—î –ø—Ä–æ –µ–∫–æ–ª–æ–≥—ñ—á–Ω—É —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å.",

    minister: {
      name: "–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ–∫—Ç–æ—Ä—É",
    },
  },
];


function Modal({
  visible,
  onClose,
  title,
  content,
  minister,
  contact,
  image,
  isMobile,
}: {
  visible: boolean;
  onClose: () => void;
  title?: string;
  content?: string;
  minister?: Person;
  contact?: Person;
  image?: string;
  isMobile: boolean;
}) {
  if (!visible) return null;

  return (
    <div style={styles.modalOverlay} onClick={onClose}>
      <div style={styles.modalContent} onClick={(e) => e.stopPropagation()}>
        <button style={styles.closeBtn} onClick={onClose}>
          √ó
        </button>
        {image && (
          <img
            src={`/img/${image.includes('–∫—É–ª—å—Ç—É—Ä–∞') || image.includes('–µ–∫–æ–ª–æ–≥—ñ—è') || image.includes('–≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π') || image.includes('–∑–æ–≤–Ω—ñ—à–Ω—ñ–π') || image.includes('—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è') ? 'sectors' : 'svg'}/${image}`}
            alt={title}
            loading="eager"
            style={{
              width: "90%",
              marginLeft: "5%",
              maxHeight: 300, // –≤—ã—à–µ
              objectFit: "cover",
              objectPosition: isMobile ? "center" : (image === "inf.png" ? "center -100px" : "center"),
              borderRadius: 8,
              marginBottom: 20,
            }}
          />
        )}
        <h2 style={{ color: "#5D3FD3", marginBottom: 12, fontSize: 34 }}>{title}</h2>
        {content && <p style={{ fontSize: 15, color: "#444", lineHeight: 1.6 }}>{content}</p>}

        {(minister || contact) && (
          <div
            style={{
              marginTop: 20,
              padding: 14,
              backgroundColor: "#f4f0ff",
              borderRadius: 8,
              fontWeight: "600",
              color: "#5D3FD3",
              fontSize: 15,
              lineHeight: 1.8,
            }}
          >
            {minister && (
              <div>
                {minister.name && <div>üë§ {minister.name}</div>}
                {minister.email && (
                  <div>
                    ‚úâÔ∏è <a style={{ color: "#5D3FD3" }} href={`mailto:${minister.email}`}>{minister.email}</a>
                  </div>
                )}
              </div>
            )}
            {contact && (
              <div>
                {contact.name && <div>üë§ {contact.name}</div>}
                {contact.email && (
                  <div>
                    ‚úâÔ∏è <a style={{ color: "#5D3FD3" }} href={`mailto:${contact.email}`}>{contact.email}</a>
                  </div>
                )}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default function StructurePage() {
  const [modalData, setModalData] = useState<StructureItem | null>(null);
  const [isMobile, setIsMobile] = useState(false);

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth <= 768);
    };
    
    checkMobile();
    window.addEventListener('resize', checkMobile);
    
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  const openModal = (item: StructureItem) => setModalData(item);
  const closeModal = () => setModalData(null);

  return (
    <div style={styles.container}>
      <h1 style={{ color: "#5D3FD3", marginBottom: 20, marginTop: 150, textAlign: "center" }}>
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –®–ê–†–ú—É
      </h1>

      <section>
        <h3 style={{ color: "#7D5FFF", marginBottom: 10, fontSize: 32 }}>–û—Ä–≥–∞–Ω–∏ –®–ê–†–ú—É</h3>
        <div style={styles.treeContainer}>
          {organs.map((org) => (
            <div
              key={org.id}
              style={styles.treeNode}
              onClick={() => openModal(org)}
              title={`–ö–ª—ñ–∫ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: ${org.title}`}
              onMouseEnter={(e) => {
                    (e.currentTarget as HTMLDivElement).style.backgroundColor = "#f4f0ff";
                    (e.currentTarget as HTMLDivElement).style.transform = "translateX(6px)";
                    (e.currentTarget as HTMLDivElement).style.boxShadow =
                    "0 4px 12px rgba(93,63,211,0.25)";
            }}
            onMouseLeave={(e) => {
                (e.currentTarget as HTMLDivElement).style.backgroundColor = "transparent";
                (e.currentTarget as HTMLDivElement).style.transform = "translateX(0)";
                (e.currentTarget as HTMLDivElement).style.boxShadow = "none";
            }}
            >
              <span style={{ fontSize: 36, marginRight: 12 }}>{org.icon}</span>
              <span style={styles.nodeTitle}>{org.title}</span>
            </div>
          ))}
        </div>
      </section>

      <section style={{ marginTop: 40 }}>
        <h2 style={{ color: "#7D5FFF", marginBottom: 10, fontSize: 32 }}>–°–µ–∫—Ç–æ—Ä–∏ –®–ê–†–ú—É</h2>
        <div style={styles.treeContainer}>
          {sectors.map((sector) => (
            <div
              key={sector.id}
              style={styles.treeNode}
              onClick={() => openModal(sector)}
              title={`–ö–ª—ñ–∫ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: ${sector.title}`}
            onMouseEnter={(e) => {
            (e.currentTarget as HTMLDivElement).style.backgroundColor = "#f4f0ff";
            (e.currentTarget as HTMLDivElement).style.transform = "translateX(6px)";
            (e.currentTarget as HTMLDivElement).style.boxShadow =
            "0 4px 12px rgba(93,63,211,0.25)";
            }}
            onMouseLeave={(e) => {
                (e.currentTarget as HTMLDivElement).style.backgroundColor = "transparent";
                (e.currentTarget as HTMLDivElement).style.transform = "translateX(0)";
                (e.currentTarget as HTMLDivElement).style.boxShadow = "none";
            }}
            >
              <span style={{ fontSize: 36, marginRight: 12 }}>{sector.icon}</span>
              <div>
                <div style={styles.nodeTitle}>{sector.title}</div>
                {sector.minister && sector.minister.email && (
                  <div style={{ fontSize: 14, color: "#5D3FD3", marginTop: 4 }}>
                    ‚úâÔ∏è <a style={{ color: "#5D3FD3" }} href={`mailto:${sector.minister.email}`}>{sector.minister.email}</a>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>

      <Modal
        visible={!!modalData}
        onClose={closeModal}
        title={modalData?.title}
        content={modalData?.description}
        minister={modalData?.minister}
        contact={modalData?.contact}
        image={modalData?.image}
        isMobile={isMobile}
      />
    </div>
  );
}

const styles = {
  container: {
    maxWidth: 900,
    margin: "80px auto",
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
    padding: "0 24px",
  },
  treeContainer: {
    borderLeft: "4px solid #7D5FFF",
    paddingLeft: 20,
  },
  treeNode: {
    cursor: "pointer",
    display: "flex",
    alignItems: "center",
    marginBottom: 16,
    color: "#4b3ca7",
    fontWeight: "600",
    userSelect: "none" as const,
    padding: "10px 14px",
    borderRadius: 8,
    transition: "all 0.25s ease",
  },
  nodeTitle: {
    fontSize: 18,
  },
  modalOverlay: {
    position: "fixed" as const,
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba(93, 63, 211, 0.45)",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 1000,
  },
  modalContent: {
    backgroundColor: "white",
    borderRadius: 10,
    padding: 36,
    maxWidth: 740,
    width: "90%",
    boxShadow: "0 6px 30px rgba(93, 63, 211, 0.35)",
    position: "relative" as const,
  },
  closeBtn: {
    position: "absolute" as const,
    top: 14,
    right: 14,
    border: "none",
    background: "none",
    fontSize: 30,
    cursor: "pointer",
    color: "#5D3FD3",
    lineHeight: 1,
  },
};
